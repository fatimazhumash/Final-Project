// src/Profile.js

import React, { useState } from 'react';
import './Profile.css';
import Modal from './Modal'; // Modal –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–Ω –∏–º–ø–æ—Ä—Ç—Ç–∞–π–º—ã–∑

// –¢—ñ–ª–¥—ñ–∫ —Å”©–∑–¥—ñ–∫
const translations = {
  kk: {
    title: '–ú–µ–Ω—ñ“£ –ø—Ä–æ—Ñ–∏–ª—ñ–º',
    name: '–ê—Ç—ã-–∂”©–Ω—ñ',
    bio: '”®–∑—ñ–º —Ç—É—Ä–∞–ª—ã',
    location: '–û—Ä–Ω–∞–ª–∞—Å“õ–∞–Ω –∂–µ—Ä',
    privateMode: '–ü—Ä–∏–≤–∞—Ç—Ç—ã —Ä–µ–∂–∏–º',
    changeName: '–ê—Ç—ã–Ω ”©–∑–≥–µ—Ä—Ç—É',
    uploadPhoto: '–§–æ—Ç–æ –∂“Ø–∫—Ç–µ—É',
    logout: '–®—ã“ì—É',
    getCurrentLocation: '–û—Ä–Ω–∞–ª–∞—Å“õ–∞–Ω –∂–µ—Ä–¥—ñ –∞–Ω—ã“õ—Ç–∞—É',
    publicMode: '“ö–æ“ì–∞–º–¥—ã“õ —Ä–µ–∂–∏–º',
    selectLanguage: '–¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞—É:',
    viewMap: '–ö–∞—Ä—Ç–∞–Ω—ã –∫”©—Ä—É',
  },
  ru: {
    title: '–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å',
    name: '–ò–º—è',
    bio: '–û —Å–µ–±–µ',
    location: '–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ',
    privateMode: '–ü—Ä–∏–≤–∞—Ç–Ω—ã–π —Ä–µ–∂–∏–º',
    changeName: '–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è',
    uploadPhoto: '–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ',
    logout: '–í—ã–π—Ç–∏',
    getCurrentLocation: '–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ',
    publicMode: '–ü—É–±–ª–∏—á–Ω—ã–π —Ä–µ–∂–∏–º',
    selectLanguage: '–í—ã–±—Ä–∞—Ç—å —è–∑—ã–∫:',
    viewMap: '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ä—Ç—É',
  },
  en: {
    title: 'My Profile',
    name: 'Name',
    bio: 'About me',
    location: 'Location',
    privateMode: 'Private mode',
    changeName: 'Change name',
    uploadPhoto: 'Upload photo',
    logout: 'Log out',
    getCurrentLocation: 'Get current location',
    publicMode: 'Public mode',
    selectLanguage: 'Select language:',
    viewMap: 'View Map',
  },
};

function Profile() {
  const [name, setName] = useState('Your Name');
  const [photo, setPhoto] = useState(null);
  const [menuOpen, setMenuOpen] = useState(false);
  const [isPrivate, setIsPrivate] = useState(false);
  const [language, setLanguage] = useState("kk");
  const [location, setLocation] = useState('');
  const [selectedPlace, setSelectedPlace] = useState(null); // –º–æ–¥–∞–ª “Ø—à—ñ–Ω

  const t = translations[language];

  const handlePhotoChange = (e) => {
    const file = e.target.files[0];
    if (file) {
      setPhoto(URL.createObjectURL(file));
      setMenuOpen(false);
    }
  };

  const handleLogout = () => {
    alert(t.logout);
  };

  const handleLocation = () => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          const lat = position.coords.latitude;
          const lon = position.coords.longitude;
          setLocation(`Lat: ${lat.toFixed(4)}, Lon: ${lon.toFixed(4)}`);
          alert(`${t.location}: ${lat.toFixed(4)}, ${lon.toFixed(4)}`);
          setMenuOpen(false);
        },
        () => {
          alert("–û—Ä–Ω–∞–ª–∞—Å“õ–∞–Ω –∂–µ—Ä–¥—ñ –∞–Ω—ã“õ—Ç–∞—É –º“Ø–º–∫—ñ–Ω –±–æ–ª–º–∞–¥—ã.");
          setMenuOpen(false);
        }
      );
    } else {
      alert("–ë“±–ª –±—Ä–∞—É–∑–µ—Ä –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è–Ω—ã “õ–æ–ª–¥–∞–º–∞–π–¥—ã.");
      setMenuOpen(false);
    }
  };

  // –ö–∞—Ä—Ç–∞–¥–∞ –∫”©—Ä—Å–µ—Ç—ñ–ª–µ—Ç—ñ–Ω –æ—Ä—ã–Ω
  const place = {
    name: "–ê—Å—Ç–∞–Ω–∞",
    region: "–ê—Å—Ç–∞–Ω–∞ “õ–∞–ª–∞—Å—ã",
    description: "“ö–∞–∑–∞“õ—Å—Ç–∞–Ω –∞—Å—Ç–∞–Ω–∞—Å—ã. –°–∞—è—Å–∏, –º”ô–¥–µ–Ω–∏ –∂”ô–Ω–µ —ñ—Å–∫–µ—Ä–ª—ñ–∫ –æ—Ä—Ç–∞–ª—ã“õ.",
    image: "https://upload.wikimedia.org/wikipedia/commons/thumb/1/12/Astana_day.jpg/800px-Astana_day.jpg",
    coordinates: {
      lat: 51.1605,
      lng: 71.4704
    }
  };

  return (
    <div className="profile-container">
      <div className="profile-header">
        <h2>{t.title}</h2>
        <div className="menu-icon" onClick={() => setMenuOpen(!menuOpen)}>‚ãÆ</div>

        {menuOpen && (
          <div className="dropdown-menu">
            <label htmlFor="uploadPhoto">üì∏ {t.uploadPhoto}</label>
            <input type="file" id="uploadPhoto" style={{ display: 'none' }} onChange={handlePhotoChange} accept="image/*" />
            <button onClick={() => { document.getElementById('nameInput').focus(); setMenuOpen(false); }}>
              ‚úèÔ∏è {t.changeName}
            </button>
            <button onClick={handleLocation}>üìç {t.getCurrentLocation}</button>
            <button onClick={() => setIsPrivate(!isPrivate)}>
              {isPrivate ? `üîì ${t.publicMode}` : `üîí ${t.privateMode}`}
            </button>
            <button onClick={handleLogout}>üö™ {t.logout}</button>
          </div>
        )}
      </div>

      <div className="profile-content">
        {photo ? (
          <img src={photo} alt="–∞–≤–∞—Ç–∞—Ä" className="avatar" />
        ) : (
          <div className="avatar-placeholder">–ù–µ—Ç —Ñ–æ—Ç–æ</div>
        )}

        <label>{t.name}:</label>
        <input id="nameInput" className="name-input" value={name} onChange={(e) => setName(e.target.value)} />

        <div className="settings">
          <label>
            <input type="checkbox" checked={isPrivate} onChange={() => setIsPrivate(!isPrivate)} />
            {t.privateMode}
          </label>
          {location && <p>üìç {t.location}: {location}</p>}

          <div>
            <label>{t.selectLanguage}</label>
            <select value={language} onChange={(e) => setLanguage(e.target.value)}>
              <option value="kk">“ö–∞–∑–∞“õ—à–∞</option>
              <option value="ru">–†—É—Å—Å–∫–∏–π</option>
              <option value="en">English</option>
            </select>
          </div>

          <div style={{ marginTop: "20px" }}>
            <button className="map-btn" onClick={() => setSelectedPlace(place)}>üó∫Ô∏è {t.viewMap}</button>
          </div>
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª –∫–æ–º–ø–æ–Ω–µ–Ω—Ç */}
      <Modal show={!!selectedPlace} onClose={() => setSelectedPlace(null)} place={selectedPlace} />
    </div>
  );
}

export default Profile;
