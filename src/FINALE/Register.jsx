import React, { useState } from "react";
import "./Register.css";
import { useNavigate } from "react-router-dom";

function Register() {
  const [name, setName] = useState("");
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [success, setSuccess] = useState("");
  const navigate = useNavigate();

  const handleRegister = async (e) => {
    e.preventDefault();

    if (!name || !email || !password) {
      setError("–ë–∞—Ä–ª—ã“õ ”©—Ä—ñ—Å—Ç–µ—Ä–¥—ñ —Ç–æ–ª—Ç—ã—Ä—É “õ–∞–∂–µ—Ç.");
      return;
    }

    try {
      const response = await fetch("https://6892e0fdc49d24bce86898c9.mockapi.io/users", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ name, email, password }),
      });

      const data = await response.json();

      if (response.ok) {
        setSuccess("–¢—ñ—Ä–∫–µ–ª—É —Å”ô—Ç—Ç—ñ ”©—Ç—Ç—ñ! –ï–Ω–¥—ñ –∂“Ø–π–µ–≥–µ –∫—ñ—Ä–µ –∞–ª–∞—Å—ã–∑.");
        setError("");
        setName("");
        setEmail("");
        setPassword("");
        navigate("/login");
      } else {
        setError(data.message || "–¢—ñ—Ä–∫–µ–ª—É —Å”ô—Ç—Å—ñ–∑ –∞—è“õ—Ç–∞–ª–¥—ã.");
        setSuccess("");
      }
    } catch (err) {
      setError("–°–µ—Ä–≤–µ—Ä–º–µ–Ω –±–∞–π–ª–∞–Ω—ã—Å –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ–ª—ñ–∫ –∫–µ—Ç—Ç—ñ. –ö–µ–π—ñ–Ω—ñ—Ä–µ–∫ “õ–∞–π—Ç–∞–ª–∞–ø –∫”©—Ä—ñ“£—ñ–∑.");
      setSuccess("");
    }
  };

  // üîµ Face ID –∞—Ä“õ—ã–ª—ã —Ç—ñ—Ä–∫–µ–ª—É —Ñ—É–Ω–∫—Ü–∏—è—Å—ã
  const handleFaceIdRegister = () => {
    navigate("/faceid"); // –ú—ã—Å–∞–ª—ã, Face ID –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–Ω–µ –±–∞“ì—ã—Ç—Ç–∞—É
  };

  return (
    <div className="auth-container">
      <h2>–¢—ñ—Ä–∫–µ–ª—É</h2>
      <form onSubmit={handleRegister}>
        <input
          type="text"
          placeholder="–ê—Ç—ã-–∂”©–Ω—ñ“£—ñ–∑"
          value={name}
          onChange={(e) => setName(e.target.value)}
        />
        <input
          type="email"
          placeholder="–≠–ª–µ–∫—Ç—Ä–æ–Ω–¥—ã –ø–æ—à—Ç–∞"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
        />
        <input
          type="password"
          placeholder="–ü–∞—Ä–æ–ª—å"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
        />
        <button type="submit">–¢—ñ—Ä–∫–µ–ª—É</button>
      </form>

      {/* ‚ûï Face ID –±–∞—Ç—ã—Ä–º–∞—Å—ã */}
      <button onClick={handleFaceIdRegister} className="faceid-btn">
        Face ID –∞—Ä“õ—ã–ª—ã —Ç—ñ—Ä–∫–µ–ª—É
      </button>

      {/* üîÅ –õ–æ–≥–∏–Ω –±–µ—Ç—ñ–Ω–µ ”©—Ç—É –±–∞—Ç—ã—Ä–º–∞—Å—ã */}
      <p className="login-redirect">
        –ê–∫–∫–∞—É–Ω—Ç—ã“£—ã–∑ –±–∞—Ä –º–∞?{" "}
        <button onClick={() => navigate("/login")} className="link-btn">
          –ñ“Ø–π–µ–≥–µ –∫—ñ—Ä—É
        </button>
      </p>

      {success && <p className="success-message">{success}</p>}
      {error && <p className="error-message">{error}</p>}
    </div>
  );
}

export default Register;
